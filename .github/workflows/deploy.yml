name: Deploy Nginx App

on:
  push:
    branches:
      - main

jobs:
  build-docker-setup-terraform:
    runs-on: ubuntu-latest

    env:
      REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
      HOME_IP: ${{ secrets.HOME_IP }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        run: |
          IMAGE_TAG=latest

  #        docker build -t $REPOSITORY_URI:$IMAGE_TAG .
  #        docker push $REPOSITORY_URI:$IMAGE_TAG

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Initialize Terraform
        working-directory: ./infra
        run: |
          set -x
          terraform init

      - name: Apply Terraform
        working-directory: ./infra
        id: apply
        env:
          TF_VAR_home_ip: ${{ env.HOME_IP }}
        run: |
          set -x
          terraform apply -auto-approve

      - name: Get EC2 Instance Public IP
        id: output
        working-directory: ./infra
        run: echo "::set-output name=instance_ip::$(terraform output -raw instance_public_ip)"


  deploy:
    needs: build-docker-setup-terraform
    runs-on: ubuntu-latest

    env:
      REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}

    steps:
      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Create .ssh Directory
        run: mkdir -p ~/.ssh

      - name: Add SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add SSH Host Key (Optional, if required)
        run: |
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: SSH into EC2 and Deploy Docker Image
        run: |
          ssh -T -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@${{ steps.instance_ip.outputs.instance_ip }} << 'EOF'
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin $REPOSITORY_URI
          docker pull $REPOSITORY_URI:latest
          docker run -d -p 80:80 $REPOSITORY_URI:latest
          EOF
