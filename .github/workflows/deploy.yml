name: Deploy Nginx App

on:
  push:
    branches:
      - feature/build-cicd-pipeline

jobs:
  build-docker-setup-infra:
    runs-on: ubuntu-latest

    env:
      REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        run: |
          echo 'Building Docker Image...'
#          set -x
#          IMAGE_TAG=latest
#          docker build -t $REPOSITORY_URI:$IMAGE_TAG .
#          docker push $REPOSITORY_URI:$IMAGE_TAG

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r infra/requirements.txt

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Deploy CDK Stack
        working-directory: ./infra
        run: cdk deploy --require-approval never

      - name: Wait for EC2 Instance to be Ready
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=MyVpc/Instance" --query "Reservations[*].Instances[*].InstanceId" --output text)
          while [ -z "$INSTANCE_IP" ]; do
            echo "Waiting for instance to be ready..."
            sleep 10
            INSTANCE_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
          done
          echo "::set-output name=instance_ip::$INSTANCE_IP"

  deploy:
    needs: build-docker-setup-infra
    runs-on: ubuntu-latest

    env:
      REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}

    steps:
      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Create .ssh Directory
        run: mkdir -p ~/.ssh

      - name: Add SSH Key
        run: |
          set -x
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH into EC2 and Deploy Docker Image
        run: |
          set -x
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@${{ needs.build-docker-setup-infra.outputs.instance_ip }} << 'EOF'
          set -x
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin $REPOSITORY_URI
          docker pull $REPOSITORY_URI:latest
          docker run -d -p 80:80 $REPOSITORY_URI:latest
          EOF